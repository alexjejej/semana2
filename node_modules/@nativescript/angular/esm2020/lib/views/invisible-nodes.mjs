import { View } from '@nativescript/core';
const getClassName = (instance) => instance.constructor.name;
export class InvisibleNode extends View {
    constructor(name = '') {
        super();
        this.name = name;
        this.nodeType = 1;
        this.nodeName = getClassName(this);
    }
    toString() {
        return `${this.nodeName}(${this.id})-${this.name}`;
    }
}
export class CommentNode extends InvisibleNode {
    constructor(value) {
        super(value);
        this.meta = {
            skipAddToDom: true,
        };
        this.id = CommentNode.id.toString();
        CommentNode.id += 1;
    }
}
CommentNode.id = 0;
export class TextNode extends InvisibleNode {
    constructor(value) {
        super(value);
        this.meta = {
            skipAddToDom: true,
        };
        this.id = TextNode.id.toString();
        TextNode.id += 1;
    }
}
TextNode.id = 0;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW52aXNpYmxlLW5vZGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvYW5ndWxhci9zcmMvbGliL3ZpZXdzL2ludmlzaWJsZS1ub2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFHMUMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDO0FBRTdELE1BQU0sT0FBZ0IsYUFBYyxTQUFRLElBQUk7SUFXOUMsWUFBc0IsT0FBZSxFQUFFO1FBQ3JDLEtBQUssRUFBRSxDQUFDO1FBRFksU0FBSSxHQUFKLElBQUksQ0FBYTtRQUdyQyxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztRQUNsQixJQUFJLENBQUMsUUFBUSxHQUFHLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRUQsUUFBUTtRQUNOLE9BQU8sR0FBRyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxFQUFFLEtBQUssSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3JELENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxXQUFZLFNBQVEsYUFBYTtJQUc1QyxZQUFZLEtBQWM7UUFDeEIsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRWIsSUFBSSxDQUFDLElBQUksR0FBRztZQUNWLFlBQVksRUFBRSxJQUFJO1NBQ25CLENBQUM7UUFDRixJQUFJLENBQUMsRUFBRSxHQUFHLFdBQVcsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDcEMsV0FBVyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDdEIsQ0FBQzs7QUFWZ0IsY0FBRSxHQUFHLENBQUMsQ0FBQztBQWExQixNQUFNLE9BQU8sUUFBUyxTQUFRLGFBQWE7SUFHekMsWUFBWSxLQUFjO1FBQ3hCLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUViLElBQUksQ0FBQyxJQUFJLEdBQUc7WUFDVixZQUFZLEVBQUUsSUFBSTtTQUNuQixDQUFDO1FBQ0YsSUFBSSxDQUFDLEVBQUUsR0FBRyxRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2pDLFFBQVEsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ25CLENBQUM7O0FBVmdCLFdBQUUsR0FBRyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWaWV3IH0gZnJvbSAnQG5hdGl2ZXNjcmlwdC9jb3JlJztcbmltcG9ydCB7IE5nVmlldyB9IGZyb20gJy4vdmlldy10eXBlcyc7XG5cbmNvbnN0IGdldENsYXNzTmFtZSA9IChpbnN0YW5jZSkgPT4gaW5zdGFuY2UuY29uc3RydWN0b3IubmFtZTtcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEludmlzaWJsZU5vZGUgZXh0ZW5kcyBWaWV3IGltcGxlbWVudHMgTmdWaWV3IHtcbiAgbWV0YTogeyBza2lwQWRkVG9Eb206IGJvb2xlYW4gfTtcbiAgbm9kZVR5cGU6IG51bWJlcjtcbiAgbm9kZU5hbWU6IHN0cmluZztcbiAgcGFyZW50Tm9kZTogTmdWaWV3O1xuICBuZXh0U2libGluZzogTmdWaWV3O1xuICBwcmV2aW91c1NpYmxpbmc6IE5nVmlldztcbiAgZmlyc3RDaGlsZDogTmdWaWV3O1xuICBsYXN0Q2hpbGQ6IE5nVmlldztcbiAgbmdDc3NDbGFzc2VzOiBNYXA8c3RyaW5nLCBib29sZWFuPjtcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgbmFtZTogc3RyaW5nID0gJycpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5ub2RlVHlwZSA9IDE7XG4gICAgdGhpcy5ub2RlTmFtZSA9IGdldENsYXNzTmFtZSh0aGlzKTtcbiAgfVxuXG4gIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiBgJHt0aGlzLm5vZGVOYW1lfSgke3RoaXMuaWR9KS0ke3RoaXMubmFtZX1gO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDb21tZW50Tm9kZSBleHRlbmRzIEludmlzaWJsZU5vZGUge1xuICBwcm90ZWN0ZWQgc3RhdGljIGlkID0gMDtcblxuICBjb25zdHJ1Y3Rvcih2YWx1ZT86IHN0cmluZykge1xuICAgIHN1cGVyKHZhbHVlKTtcblxuICAgIHRoaXMubWV0YSA9IHtcbiAgICAgIHNraXBBZGRUb0RvbTogdHJ1ZSxcbiAgICB9O1xuICAgIHRoaXMuaWQgPSBDb21tZW50Tm9kZS5pZC50b1N0cmluZygpO1xuICAgIENvbW1lbnROb2RlLmlkICs9IDE7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFRleHROb2RlIGV4dGVuZHMgSW52aXNpYmxlTm9kZSB7XG4gIHByb3RlY3RlZCBzdGF0aWMgaWQgPSAwO1xuXG4gIGNvbnN0cnVjdG9yKHZhbHVlPzogc3RyaW5nKSB7XG4gICAgc3VwZXIodmFsdWUpO1xuXG4gICAgdGhpcy5tZXRhID0ge1xuICAgICAgc2tpcEFkZFRvRG9tOiB0cnVlLFxuICAgIH07XG4gICAgdGhpcy5pZCA9IFRleHROb2RlLmlkLnRvU3RyaW5nKCk7XG4gICAgVGV4dE5vZGUuaWQgKz0gMTtcbiAgfVxufVxuIl19